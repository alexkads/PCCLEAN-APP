import { CheckBox } from "std-widgets.slint";
import { Theme } from "../theme.slint";
import { CategoryData } from "../types.slint";

// Card de categoria
export component CategoryCard inherits Rectangle {
    in property <CategoryData> data;
    in-out property <bool> selected: data.selected;
    
    callback selection-changed(bool);
    
    // Propriedades privadas para cores
    private property <color> card-background: selected ? rgba(139, 92, 246, 0.15) : rgba(20, 20, 40, 0.6);
    private property <color> card-border: selected ? Theme.primary : rgba(255, 255, 255, 0.05);
    
    height: 90px;
    background: card-background;
    border-radius: Theme.radius-large;
    border-width: 1.5px;
    border-color: card-border;
    
    // Acessibilidade
    accessible-role: checkbox;
    accessible-label: data.name + ", " + data.items-count + " items, " + data.total-size;
    accessible-checked: selected;
    
    // Animações suaves
    animate background, border-color {
        duration: 250ms;
        easing: ease-in-out;
    }
    
    // Hover effect usando states
    states [
        hover when touch.has-hover: {
            background: selected ? rgba(139, 92, 246, 0.2) : rgba(30, 30, 50, 0.8);
        }
    ]
    
    touch := TouchArea {
        clicked => {
            selected = !selected;
            selection-changed(selected);
        }
    }
    
    HorizontalLayout {
        padding: 20px;
        spacing: Theme.spacing-medium;
        alignment: center;
        
        CheckBox {
            checked <=> selected;
            toggled => {
                selection-changed(self.checked);
            }
        }
        
        Text {
            text: data.icon;
            font-size: 28px;
            width: 40px;
            vertical-alignment: center;
        }
        
        VerticalLayout {
            spacing: 4px;
            alignment: start;
            
            Text {
                text: data.name;
                font-size: 16px;
                font-weight: 600;
                color: Theme.text-primary;
                vertical-alignment: center;
            }
            
            Text {
                text: data.items-count + " items • " + data.total-size;
                font-size: 13px;
                color: Theme.text-secondary;
                vertical-alignment: center;
            }
        }
        
        Rectangle {
            horizontal-stretch: 1;
        }
        
        // Size badge
        Rectangle {
            width: 90px;
            height: 32px;
            background: Theme.primary;
            border-radius: Theme.radius-small;
            
            Text {
                text: data.total-size;
                font-size: 14px;
                font-weight: 600;
                color: white;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }
    }
}
